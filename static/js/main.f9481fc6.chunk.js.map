{"version":3,"sources":["components/FinalScoreCard.styles.ts","API.ts","components/FinalScoreCard.tsx","utils.ts","components/RangeSlider.styles.ts","components/RangeSlider.tsx","components/SelectionButton.styles.ts","components/SelectionButton.tsx","components/PrepareGameCard.styles.ts","components/PrepareGameCard.tsx","components/QuestionCard.styles.ts","components/QuestionCard.tsx","hooks/useGame.tsx","hooks/useGameOptions.tsx","images/background.jpg","App.styles.ts","App.tsx","index.tsx"],"names":["Difficulty","Category","FinalScoreCardWrapper","styled","div","RestartButton","button","FinalScoreCard","scores","resetGame","onClick","fetchQuizQuestions","amount","difficulty","category","a","endPoint","fetch","json","data","results","map","q","answers","arr","incorrect_answers","correct_answer","sort","Math","random","Error","RangeSliderWrapper","RangeSlider","callback","useState","rangeValue","setRangeValue","useEffect","className","type","min","max","value","onChange","e","target","Button","isSelected","SelectionButton","keyword","Wrapper","CategoryWrapper","DifficultyWrapper","PrepareGameCard","callbacks","gameOptions","difficultyOptions","Object","entries","categoryOptions","setDifficulty","setQuestionAmount","setCategory","option","i","toLowerCase","AnswerButton","isCorrect","isAnswered","QuestionCard","game","handleUserAnswer","number","totalQuestions","questions","userAnswers","question","he","decode","answer","length","correctAnswer","disabled","currentTarget","useGame","isLoading","isGameOver","setGame","prev","startGame","numberOfQuestions","alert","num","key","userAnswer","moveToNextQuestion","questionAmount","undefined","setGameOptions","readyToPlay","setReadyToPlay","difficultyEnum","categoryEnum","GlobalStyle","createGlobalStyle","background","ButtonWrapper","App","useGameOptions","optionSetter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i4BAEO,ICAKA,EAMAC,EDNCC,EAAwBC,IAAOC,IAAV,KAUrBC,EAAgBF,IAAOG,OAAV,KEKXC,EATmC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC3D,OACE,eAACP,EAAD,WACE,wDAA2BM,KAC3B,cAACH,EAAD,CAAeK,QAASD,EAAxB,2B,gDDVMT,K,YAAAA,E,gBAAAA,E,aAAAA,M,cAMAC,K,OAAAA,E,sBAAAA,E,WAAAA,E,UAAAA,E,WAAAA,E,iBAAAA,E,YAAAA,E,aAAAA,E,cAAAA,E,SAAAA,E,iBAAAA,E,aAAAA,E,mBAAAA,M,KA4BL,IAAMU,EAAkB,uCAAG,WAChCC,EACAC,EACAC,GAHgC,iBAAAC,EAAA,6DAK1BC,EAL0B,6CAKuBJ,EALvB,uBAK4CC,EAL5C,yBAM9BC,EAAW,aAAeA,EAAW,IANP,kBASJG,MAAMD,GATF,8BASaE,OATb,cASxBC,EATwB,yBAUvBA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eACpBA,GADmB,IAEtBC,SEhDuBC,EFgDD,GAAD,mBAAKF,EAAEG,mBAAP,CAA0BH,EAAEI,iBE/CrD,YAAIF,GAAKG,MAAK,kBAAMC,KAAKC,SAAW,SADV,IAACL,MFoCK,wCAexB,IAAIM,MAAM,oBAfc,0DAAH,0D,u/EGlCxB,IAAMC,EAAqB5B,IAAOC,IAAV,KC4BhB4B,EAvB4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACvBC,mBAAS,MADc,mBACpDC,EADoD,KACxCC,EADwC,KAO3D,OAJAC,qBAAU,WACRJ,EAASE,KACR,CAACA,IAGF,cAACJ,EAAD,UACE,sBAAKO,UAAU,YAAf,UACE,sDAAyBH,KACzB,uBACEI,KAAK,QACLC,IAAI,IACJC,IAAI,KACJC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAcQ,EAAEC,OAAOH,gB,+UCjB3C,IAAMI,EAAS3C,IAAOG,OAAV,KAMH,YACZ,OADgC,EAAjByC,WAEX,4CACA,+CCUOC,EAbmC,SAAC,GAK5C,IAJLD,EAII,EAJJA,WACAE,EAGI,EAHJA,QACAP,EAEI,EAFJA,MACAhC,EACI,EADJA,QAEA,OACE,cAACoC,EAAD,CAAQJ,MAAOA,EAAOhC,QAASA,EAASqC,WAAYA,EAApD,SACE,8BAAME,O,yeClBL,IAAMC,EAAU/C,IAAOC,IAAV,KAMP+C,EAAkBhD,IAAOC,IAAV,KASfgD,EAAoBjD,IAAOC,IAAV,KCwCfiD,EA3CqC,SAAC,GAG9C,IAFLC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEMC,EAAoBC,OAAOC,QAAQ1D,GACnC2D,EAAkBF,OAAOC,QAAQzD,GAC/B2D,EAAkDN,EAAlDM,cAAeC,EAAmCP,EAAnCO,kBAAmBC,EAAgBR,EAAhBQ,YAClChD,EAAyByC,EAAzBzC,SAAUD,EAAe0C,EAAf1C,WAClB,OACE,eAACqC,EAAD,WACE,qBAAKZ,UAAU,kBAAf,SACE,cAAC,EAAD,CAAaL,SAAU4B,MAEzB,cAACV,EAAD,UACGQ,EAAgBtC,KAAI,SAAC0C,EAAQC,GAAT,OACnB,cAAC,EAAD,CACEjB,WAAYjC,IAAaiD,EAAO,GAEhCrB,MAAOqB,EAAO,GACdd,QAASc,EAAO,GAAGE,cACnBvD,QAAS,SAACkC,GACRkB,EAAYlB,KAJToB,QASX,cAACZ,EAAD,UACGI,EAAkBnC,KAAI,SAAC0C,EAAQC,GAAT,OACrB,cAAC,EAAD,CACEjB,WAAYlC,IAAekD,EAAO,GAElCrB,MAAOqB,EAAO,GACdd,QAASc,EAAO,GAAGE,cACnBvD,QAAS,SAACkC,GACRgB,EAAchB,KAJXoB,Y,kgBCrCV,IAAMd,EAAU/C,IAAOC,IAAV,KAOP8D,EAAe/D,IAAOG,OAAV,KAMT,YAAgC,IAA7B6D,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1B,OAAKA,EAEMA,GAAcD,EAChB,4CAEA,wCAJA,+CC4BEE,EAzCmC,SAAC,GAG5C,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,iBAEQC,EAA2DF,EAA3DE,OAAQC,EAAmDH,EAAnDG,eAAgBC,EAAmCJ,EAAnCI,UAAWlE,EAAwB8D,EAAxB9D,OAAQmE,EAAgBL,EAAhBK,YAE7CC,EAAWF,EAAUF,EAAS,GAEpC,OACE,eAAC,EAAD,WACE,qBAAKlC,UAAU,iBACf,wCACUkC,EADV,MACqBC,KAErB,wCAAWjE,KACX,mBAAG8B,UAAU,iBAAb,SAA+BuC,IAAGC,OAAOF,EAASA,YAClD,qBAAKtC,UAAU,oBAAf,SACGsC,EAASrD,QAAQF,KAAI,SAAC0D,EAAgBf,GAAjB,OACpB,8BACE,cAACE,EAAD,CACEE,WAAYE,EAAKK,YAAYK,SAAWR,EACxCL,UACEG,EAAKK,YAAYK,SAAWR,GAC5BO,IAAWJ,EAAYH,EAAS,GAAGS,cAErCC,SAAUZ,EAAKK,YAAYK,SAAWR,EAEtC9B,MAAOqC,EACPrE,QAAS,SAACkC,GAAD,OACP2B,EAAiBC,EAAS,EAAG5B,EAAEuC,cAAczC,QAVjD,SAaGmC,IAAGC,OAAOC,IANNf,IARCA,YC0FLoB,EAhGC,WAAO,IAAD,EACIlD,mBAAoB,CAC1CsC,OAAQ,EACRC,eAAgB,EAChBY,WAAW,EACXC,YAAY,EACZZ,UAAW,GACXlE,OAAQ,EACRmE,YAAa,KARK,mBACbL,EADa,KACPiB,EADO,KAWpBlD,qBAAU,WACJiC,EAAKK,YAAYK,SAAWV,EAAKG,gBACnCc,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBF,YAAY,SAE3C,CAAChB,EAAKK,cAUT,IAAMc,EAAS,uCAAG,WAChBC,EACA7E,EACAC,GAHgB,eAAAC,EAAA,6DAPhBwE,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBH,WAAW,OAOzB,kBAOU1E,EACtB+E,EACA7E,EACAC,GAVY,QAOR4D,EAPQ,QAYAM,OAAS,EACrBO,GAAQ,SAACC,GAAD,mBAAC,eACJA,GADG,IAENH,WAAW,EACXC,YAAY,EACZZ,YACAD,eAAgBC,EAAUM,aAG5BW,MAAM,iEACNlF,KAtBY,gDAyBdkF,MAAM,+BACNlF,IA1Bc,yDAAH,0DA8BTA,EAAY,WAChB8E,EAAQ,CACNf,OAAQ,EACRC,eAAgB,EAChBY,WAAW,EACXC,YAAY,EACZZ,UAAW,GACXlE,OAAQ,EACRmE,YAAa,MA8BjB,MAAO,CAAEL,OAAMmB,YAAWhF,YAAW8D,iBA1BZ,SAACqB,EAAab,EAAgBc,GACjDvB,EAAKI,UAAUkB,GAAKlE,iBAAmBqD,GA9C3CQ,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBhF,OAAQgF,EAAKhF,OAAS,OAiDpD+E,GAAQ,SAACC,GAAD,mBAAC,eACJA,GADG,IAENb,YAAY,GAAD,mBACNL,EAAKK,aADC,CAET,CACEC,SAAUN,EAAKI,UAAUkB,GAAKhB,SAC9BrD,QAAS+C,EAAKI,UAAUkB,GAAKrE,QAC7BuE,WAAYf,EACZZ,UAAWG,EAAKI,UAAUkB,GAAKlE,iBAAmBqD,EAClDE,cAAeX,EAAKI,UAAUkB,GAAKlE,wBAaYqE,mBAP5B,WACzBR,GAAQ,SAACC,GAAD,mBAAC,eACJA,GADG,IAENhB,OAAQF,EAAKE,iBCtDJY,EA/CC,WAAO,IAAD,EACkBlD,mBAAsB,CAC1D8D,oBAAgBC,EAChBnF,cAAUmF,EACVpF,gBAAYoF,IAJM,mBACb1C,EADa,KACA2C,EADA,OAOkBhE,oBAAS,GAP3B,mBAObiE,EAPa,KAOAC,EAPA,KASpB/D,qBAAU,gBAMmB4D,IAAzB1C,EAAYzC,eACemF,IAA3B1C,EAAY1C,iBACmBoF,IAA/B1C,EAAYyC,gBAEZI,GAAe,SAACZ,GAAD,OAAU,OAR1B,CAACjC,IA2BJ,MAAO,CACLA,cACAK,cAjBoB,SAAChB,GACrB,IACMyD,EADazD,EAAEuC,cAAczC,MAEnCwD,GAAe,SAACV,GAAD,mBAAC,eAAeA,GAAhB,IAAsB3E,WAAYwF,QAejDvC,YAZkB,SAAClB,GACnB,IACM0D,EADW1D,EAAEuC,cAAczC,MAEjCwD,GAAe,SAACV,GAAD,mBAAC,eAAeA,GAAhB,IAAsB1E,SAAUwF,QAU/CzC,kBAPwB,SAACmC,GACzBE,GAAe,SAACV,GAAD,mBAAC,eAAeA,GAAhB,IAAsBQ,uBAOrCG,gBCpDW,MAA0B,uC,qjCCGlC,IAAMI,EAAcC,YAAH,IAOIC,GAefvD,EAAU/C,IAAOC,IAAV,KAQP0C,GAAS3C,IAAOG,OAAV,KAgBf,YACA,OADkB,EAAf4E,SAGC,GADA,oEAKKwB,GAAgBvG,IAAOC,IAAV,KCUXuG,OA1Df,WAAgB,IAAD,EAOTvB,IALFd,EAFW,EAEXA,KACAmB,EAHW,EAGXA,UACAlB,EAJW,EAIXA,iBACAwB,EALW,EAKXA,mBACAtF,EANW,EAMXA,UANW,EAQyCmG,IAA9CrD,EARK,EAQLA,YAAa4C,EARR,EAQQA,YAAgBU,EARxB,6CASLxB,EAA+Cf,EAA/Ce,UAAWC,EAAoChB,EAApCgB,WAAYX,EAAwBL,EAAxBK,YAAaH,EAAWF,EAAXE,OAE5C,OACE,qCACE,cAAC+B,EAAD,IACA,eAAC,EAAD,WAGGjB,GAAqC,IAAvBX,EAAYK,QACzB,cAAC,EAAD,CAAiB1B,UAAWuD,EAActD,YAAaA,KAEvD8B,IAAcC,GACd,cAAC,EAAD,CAAchB,KAAMA,EAAMC,iBAAkBA,IAE7Cc,GAAa,yCACZA,GAAaC,GAAqC,IAAvBX,EAAYK,QACvC,cAAC0B,GAAD,UACE,cAAC,GAAD,CACExB,UAAWiB,EACXzF,QAAS,kBACP+E,EACElC,EAAYyC,eACZzC,EAAY1C,WACZ0C,EAAYzC,WANlB,2BAcFwE,GAAchB,EAAKK,YAAYK,OAASV,EAAKG,gBAC7C,cAACiC,GAAD,UACE,cAAC,GAAD,CACExB,SAAUP,EAAYK,SAAWR,EACjC9D,QAASqF,EAFX,6BAQHT,GAAcX,EAAYK,OAAS,GAClC,cAAC,EAAD,CAAgBxE,OAAQ8D,EAAK9D,OAAQC,UAAWA,WCvD1DqG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9481fc6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FinalScoreCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 10px;\n  max-width: 600px;\n  background-color: #f2edef;\n  padding: 20px;\n`;\n\nexport const RestartButton = styled.button`\n  cursor: pointer;\n  margin: 10px 10px;\n  word-wrap: break-word;\n  height: 40px;\n  width: 90%;\n  background: linear-gradient(180deg, #f2edef, #21ae53);\n  border: 2px solid #666c59;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :focus {\n    outline: none;\n  }\n  :hover {\n    background: linear-gradient(180deg, #f2edef, #0b6864);\n  }\n`;\n","import { shuffleArray } from \"./utils\";\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\nexport enum Category {\n  ALL = \"\",\n  GENERAL_KNOWLEDGE = \"9\",\n  BOOKS = \"10\",\n  FILM = \"11\",\n  MUSIC = \"12\",\n  VIDEO_GAMES = \"15\",\n  SPORTS = \"21\",\n  HISTORY = \"23\",\n  POLITICS = \"24\",\n  ART = \"25\",\n  CELEBRITIES = \"26\",\n  ANIMALS = \"27\",\n  ANIME_MANGA = \"31 \",\n}\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  answers: string[];\n  question: string;\n  type: string;\n};\n\nexport type QuestionState = Question & { answers: string[] };\n\nexport const fetchQuizQuestions = async (\n  amount: number | undefined,\n  difficulty: Difficulty | undefined,\n  category?: Category | undefined\n) => {\n  const endPoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple${\n    category ? \"&category=\" + category : \"\"\n  }`;\n  try {\n    const data = await (await fetch(endPoint)).json();\n    return data.results.map((q: Question) => ({\n      ...q,\n      answers: shuffleArray([...q.incorrect_answers, q.correct_answer]),\n    }));\n  } catch (err) {\n    throw new Error(\"An error occured\");\n  }\n};\n","import React from \"react\";\nimport { FinalScoreCardWrapper, RestartButton } from \"./FinalScoreCard.styles\";\n\ntype FinalScoreProps = {\n  scores: number;\n  resetGame: any;\n};\n\nconst FinalScoreCard: React.FC<FinalScoreProps> = ({ scores, resetGame }) => {\n  return (\n    <FinalScoreCardWrapper>\n      <div>YOUR FINAL SCORE IS: {scores}</div>\n      <RestartButton onClick={resetGame}>TRY AGAIN</RestartButton>\n    </FinalScoreCardWrapper>\n  );\n};\n\nexport default FinalScoreCard;\n","export const shuffleArray = (arr: any[]) =>\n  [...arr].sort(() => Math.random() - 0.5);\n","import styled from \"styled-components\";\n\nexport const RangeSliderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .questions {\n    text-align: center;\n    width: 80%;\n  }\n  input[type=\"range\"] {\n    -webkit-appearance: none;\n    margin: 18px 0;\n    width: 80%;\n  }\n  input[type=\"range\"]:focus {\n    outline: none;\n  }\n  input[type=\"range\"]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    background: #3071a9;\n    border-radius: 1.3px;\n    border: 0.2px solid #010101;\n  }\n  input[type=\"range\"]::-webkit-slider-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -14px;\n  }\n  input[type=\"range\"]:focus::-webkit-slider-runnable-track {\n    background: #367ebd;\n  }\n  input[type=\"range\"]::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    background: #3071a9;\n    border-radius: 1.3px;\n    border: 0.2px solid #010101;\n  }\n  input[type=\"range\"]::-moz-range-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n  }\n  input[type=\"range\"]::-ms-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    border-width: 16px 0;\n    color: transparent;\n  }\n  input[type=\"range\"]::-ms-fill-lower {\n    background: #2a6495;\n    border: 0.2px solid #010101;\n    border-radius: 2.6px;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  }\n  input[type=\"range\"]::-ms-fill-upper {\n    background: #3071a9;\n    border: 0.2px solid #010101;\n    border-radius: 2.6px;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  }\n  input[type=\"range\"]::-ms-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n  }\n  input[type=\"range\"]:focus::-ms-fill-lower {\n    background: #3071a9;\n  }\n  input[type=\"range\"]:focus::-ms-fill-upper {\n    background: #367ebd;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { RangeSliderWrapper } from \"./RangeSlider.styles\";\n\ntype SliderProps = {\n  callback: any;\n};\n\nconst RangeSlider: React.FC<SliderProps> = ({ callback }) => {\n  const [rangeValue, setRangeValue] = useState(\"10\");\n\n  useEffect(() => {\n    callback(rangeValue);\n  }, [rangeValue]);\n\n  return (\n    <RangeSliderWrapper>\n      <div className=\"questions\">\n        <p>Number of Questions: {rangeValue}</p>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"50\"\n          value={rangeValue}\n          onChange={(e) => setRangeValue(e.target.value)}\n        />\n      </div>\n    </RangeSliderWrapper>\n  );\n};\n\nexport default RangeSlider;\n","import styled from \"styled-components\";\n\ntype SelectionButtonProps = {\n  isSelected: boolean;\n};\n\nexport const Button = styled.button<SelectionButtonProps>`\n  cursor: pointer;\n  margin: 10px 10px;\n  word-wrap: break-word;\n  height: 40px;\n  width: 40%;\n  background: ${({ isSelected }) => {\n    return isSelected\n      ? \"linear-gradient(180deg, #f2edef, #0b6864)\"\n      : \"linear-gradient(180deg, #f2edef, #21ae53)\";\n  }};\n\n  border: 2px solid #666c59;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :focus {\n    outline: none;\n  }\n`;\n","import React from \"react\";\nimport { Button } from \"./SelectionButton.styles\";\n\n// Button to select Game Options before Start\n\ntype SelectionProps = {\n  isSelected: boolean;\n  keyword: string;\n  value: string;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst SelectionButton: React.FC<SelectionProps> = ({\n  isSelected,\n  keyword,\n  value,\n  onClick,\n}) => {\n  return (\n    <Button value={value} onClick={onClick} isSelected={isSelected}>\n      <div>{keyword}</div>\n    </Button>\n  );\n};\n\nexport default SelectionButton;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  max-width: 600px;\n  background-color: #f2edef;\n`;\n\nexport const CategoryWrapper = styled.div`\n  margin: 40px;\n  display: flex;\n  width: inherit;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const DifficultyWrapper = styled.div`\n  margin: 40px;\n  display: flex;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport { Difficulty, Category } from \"../API\";\nimport RangeSlider from \"./RangeSlider\";\nimport SelectionButton from \"./SelectionButton\";\nimport {\n  DifficultyWrapper,\n  CategoryWrapper,\n  Wrapper,\n} from \"./PrepareGameCard.styles\";\ntype PrepareGameProps = {\n  callbacks: any;\n  gameOptions: any;\n};\n\nconst PrepareGameCard: React.FC<PrepareGameProps> = ({\n  callbacks,\n  gameOptions,\n}) => {\n  const difficultyOptions = Object.entries(Difficulty);\n  const categoryOptions = Object.entries(Category);\n  const { setDifficulty, setQuestionAmount, setCategory } = callbacks;\n  const { category, difficulty } = gameOptions;\n  return (\n    <Wrapper>\n      <div className=\"question-amount\">\n        <RangeSlider callback={setQuestionAmount} />\n      </div>\n      <CategoryWrapper>\n        {categoryOptions.map((option, i) => (\n          <SelectionButton\n            isSelected={category === option[1]}\n            key={i}\n            value={option[1]}\n            keyword={option[0].toLowerCase()}\n            onClick={(e) => {\n              setCategory(e);\n            }}\n          />\n        ))}\n      </CategoryWrapper>\n      <DifficultyWrapper>\n        {difficultyOptions.map((option, i) => (\n          <SelectionButton\n            isSelected={difficulty === option[1]}\n            key={i}\n            value={option[1]}\n            keyword={option[0].toLowerCase()}\n            onClick={(e) => {\n              setDifficulty(e);\n            }}\n          />\n        ))}\n      </DifficultyWrapper>\n    </Wrapper>\n  );\n};\n\nexport default PrepareGameCard;\n","import styled from \"styled-components\";\n\ntype AnswerButtonProps = {\n  isCorrect: boolean;\n  isAnswered: boolean;\n};\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  max-width: 600px;\n  background-color: #f2edef;\n  padding: 20px;\n`;\n\nexport const AnswerButton = styled.button<AnswerButtonProps>`\n  cursor: pointer;\n  margin: 10px 10px;\n  word-wrap: break-word;\n  height: 40px;\n  width: 90%;\n  background: ${({ isCorrect, isAnswered }) => {\n    if (!isAnswered) {\n      return \"linear-gradient(180deg, #f2edef, #21ae53)\";\n    } else if (isAnswered && isCorrect) {\n      return \"linear-gradient(180deg, #f2edef, #0b6864)\";\n    } else {\n      return \"linear-gradient(180deg, #f2edef, red)\";\n    }\n  }};\n  border: 2px solid #666c59;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :focus {\n    outline: none;\n  }\n`;\n","import React from \"react\";\nimport he from \"he\";\nimport { Wrapper, AnswerButton } from \"./QuestionCard.styles\";\n\ntype QuestionCardProps = {\n  game: any;\n  handleUserAnswer: any;\n};\n\nconst QuestionCard: React.FC<QuestionCardProps> = ({\n  game,\n  handleUserAnswer,\n}) => {\n  const { number, totalQuestions, questions, scores, userAnswers } = game;\n\n  const question = questions[number - 1];\n\n  return (\n    <Wrapper>\n      <div className=\"qcard-header\"></div>\n      <p>\n        Number {number} / {totalQuestions}\n      </p>\n      <p>Scores {scores}</p>\n      <p className=\"qcard-question\">{he.decode(question.question)}</p>\n      <div className=\"qcard-ans-wrapper\">\n        {question.answers.map((answer: string, i: number) => (\n          <div key={i}>\n            <AnswerButton\n              isAnswered={game.userAnswers.length === number}\n              isCorrect={\n                game.userAnswers.length === number &&\n                answer === userAnswers[number - 1].correctAnswer\n              }\n              disabled={game.userAnswers.length === number ? true : false}\n              key={i}\n              value={answer}\n              onClick={(e) =>\n                handleUserAnswer(number - 1, e.currentTarget.value)\n              }\n            >\n              {he.decode(answer)}\n            </AnswerButton>\n          </div>\n        ))}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default QuestionCard;\n","import { useState, useEffect } from \"react\";\nimport { Difficulty, Category, Question, fetchQuizQuestions } from \"../API\";\n\nexport type UserAnswer = {\n  question: string;\n  answers: string[];\n  userAnswer: string;\n  isCorrect: boolean;\n  correctAnswer: string;\n};\n\nexport type GameState = {\n  number: number;\n  totalQuestions: number;\n  isLoading: boolean;\n  isGameOver: boolean;\n  questions: Question[];\n  scores: number;\n  userAnswers: UserAnswer[];\n};\n\nconst useGame = () => {\n  const [game, setGame] = useState<GameState>({\n    number: 1,\n    totalQuestions: 0,\n    isLoading: false,\n    isGameOver: true,\n    questions: [],\n    scores: 0,\n    userAnswers: [],\n  });\n\n  useEffect(() => {\n    if (game.userAnswers.length === game.totalQuestions) {\n      setGame((prev) => ({ ...prev, isGameOver: true }));\n    }\n  }, [game.userAnswers]);\n\n  function isLoading() {\n    setGame((prev) => ({ ...prev, isLoading: true }));\n  }\n\n  function addScore() {\n    setGame((prev) => ({ ...prev, scores: prev.scores + 1 }));\n  }\n\n  const startGame = async (\n    numberOfQuestions: number | undefined,\n    difficulty: Difficulty | undefined,\n    category: Category | undefined\n  ) => {\n    isLoading();\n    try {\n      const questions = await fetchQuizQuestions(\n        numberOfQuestions,\n        difficulty,\n        category\n      );\n      if (questions.length > 0) {\n        setGame((prev) => ({\n          ...prev,\n          isLoading: false,\n          isGameOver: false,\n          questions,\n          totalQuestions: questions.length,\n        }));\n      } else {\n        alert(\"Not enough Questions available, try less or another category!\");\n        resetGame();\n      }\n    } catch (err) {\n      alert(\"an error occured, try again\");\n      resetGame();\n    }\n  };\n\n  const resetGame = () => {\n    setGame({\n      number: 1,\n      totalQuestions: 0,\n      isLoading: false,\n      isGameOver: true,\n      questions: [],\n      scores: 0,\n      userAnswers: [],\n    });\n  };\n\n  const handleUserAnswer = (num: number, answer: string, key: number) => {\n    if (game.questions[num].correct_answer === answer) {\n      addScore();\n    }\n    setGame((prev) => ({\n      ...prev,\n      userAnswers: [\n        ...game.userAnswers,\n        {\n          question: game.questions[num].question,\n          answers: game.questions[num].answers,\n          userAnswer: answer,\n          isCorrect: game.questions[num].correct_answer === answer,\n          correctAnswer: game.questions[num].correct_answer,\n        },\n      ],\n    }));\n  };\n\n  const moveToNextQuestion = () => {\n    setGame((prev) => ({\n      ...prev,\n      number: game.number++,\n    }));\n  };\n\n  return { game, startGame, resetGame, handleUserAnswer, moveToNextQuestion };\n};\n\nexport default useGame;\n","import { useState, useEffect } from \"react\";\nimport { Difficulty, Category } from \"../API\";\n\ntype GameOptions = {\n  questionAmount: number | undefined;\n  category: Category | undefined;\n  difficulty: Difficulty | undefined;\n};\n\nconst useGame = () => {\n  const [gameOptions, setGameOptions] = useState<GameOptions>({\n    questionAmount: undefined,\n    category: undefined,\n    difficulty: undefined,\n  });\n\n  const [readyToPlay, setReadyToPlay] = useState(false);\n\n  useEffect(() => {\n    checkReadyToPlay();\n  }, [gameOptions]);\n\n  function checkReadyToPlay() {\n    if (\n      gameOptions.category !== undefined &&\n      gameOptions.difficulty !== undefined &&\n      gameOptions.questionAmount !== undefined\n    ) {\n      setReadyToPlay((prev) => true);\n    }\n  }\n\n  const setDifficulty = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const difficulty = e.currentTarget.value;\n    const difficultyEnum = difficulty as Difficulty;\n    setGameOptions((prev) => ({ ...prev, difficulty: difficultyEnum }));\n  };\n\n  const setCategory = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const category = e.currentTarget.value;\n    const categoryEnum = category as Category;\n    setGameOptions((prev) => ({ ...prev, category: categoryEnum }));\n  };\n\n  const setQuestionAmount = (questionAmount: number) => {\n    setGameOptions((prev) => ({ ...prev, questionAmount }));\n  };\n  return {\n    gameOptions,\n    setDifficulty,\n    setCategory,\n    setQuestionAmount,\n    readyToPlay,\n  };\n};\n\nexport default useGame;\n","export default __webpack_public_path__ + \"static/media/background.7fb5126b.jpg\";","import styled, { createGlobalStyle } from \"styled-components\";\nimport background from \"./images/background.jpg\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  height: 100%;\n}\n\nbody {\n    \n    background-image: url(${background});\n    background-size: cover;\n    margin: 0;\n    padding: 20px 20px;\n    display: flex;\n    justify-content: center; \n    height: 100%;\n    \n}\n\n* {\n    box-sizing: border-box;\n    font-family: 'Catamaran', sans-serif;\n}`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  margin: 10px 10px;\n  word-wrap: break-word;\n  height: 40px;\n  width: 80%;\n\n  background: linear-gradient(180deg, #f2edef, #21ae53);\n  border: 2px solid #666c59;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n\n  :focus {\n    outline: none;\n  }\n\n  ${({ disabled }) => {\n    return !disabled\n      ? \":hover {background: linear-gradient(180deg, #f2edef, #0b6864)}\"\n      : \"\";\n  }}\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n","import React from \"react\";\nimport FinalScoreCard from \"./components/FinalScoreCard\";\nimport PrepareGameCard from \"./components/PrepareGameCard\";\nimport QuestionCard from \"./components/QuestionCard\";\nimport useGame from \"./hooks/useGame\";\nimport useGameOptions from \"./hooks/useGameOptions\";\nimport { Button, GlobalStyle, Wrapper, ButtonWrapper } from \"./App.styles\";\n\nfunction App() {\n  const {\n    game,\n    startGame,\n    handleUserAnswer,\n    moveToNextQuestion,\n    resetGame,\n  } = useGame();\n  const { gameOptions, readyToPlay, ...optionSetter } = useGameOptions();\n  const { isLoading, isGameOver, userAnswers, number } = game;\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper>\n        {/* <pre>{JSON.stringify(gameOptions)}</pre>\n        <pre>{JSON.stringify(game)}</pre> */}\n        {isGameOver && userAnswers.length === 0 && (\n          <PrepareGameCard callbacks={optionSetter} gameOptions={gameOptions} />\n        )}\n        {!isLoading && !isGameOver && (\n          <QuestionCard game={game} handleUserAnswer={handleUserAnswer} />\n        )}\n        {isLoading && <p>LOADING</p>}\n        {!isLoading && isGameOver && userAnswers.length === 0 && (\n          <ButtonWrapper>\n            <Button\n              disabled={!readyToPlay ? true : false}\n              onClick={() =>\n                startGame(\n                  gameOptions.questionAmount,\n                  gameOptions.difficulty,\n                  gameOptions.category\n                )\n              }\n            >\n              Start Game\n            </Button>\n          </ButtonWrapper>\n        )}\n        {!isGameOver && game.userAnswers.length < game.totalQuestions && (\n          <ButtonWrapper>\n            <Button\n              disabled={userAnswers.length === number ? false : true}\n              onClick={moveToNextQuestion}\n            >\n              Next Question\n            </Button>\n          </ButtonWrapper>\n        )}\n        {isGameOver && userAnswers.length > 0 && (\n          <FinalScoreCard scores={game.scores} resetGame={resetGame} />\n        )}\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}